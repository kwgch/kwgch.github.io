<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[blogはweb logの略]]></title>
  <link href="http://kwgch.github.io/atom.xml" rel="self"/>
  <link href="http://kwgch.github.io/"/>
  <updated>2014-09-04T01:37:18+09:00</updated>
  <id>http://kwgch.github.io/</id>
  <author>
    <name><![CDATA[m.kwgch]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[【rails】Githubアカウントでのログインを実装する]]></title>
    <link href="http://kwgch.github.io/blog/2014/09/03/rails/"/>
    <updated>2014-09-03T23:47:27+09:00</updated>
    <id>http://kwgch.github.io/blog/2014/09/03/rails</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/great-h/great-h.github.io/issues/1190">omniauthを使ってGitHubでログインする機能を実装する</a>と宣言したのですが、omniauthは<a href="https://github.com/plataformatec/devise">devise</a>に入ってました。</p>

<p>なのでdeviseを使いました。</p>

<h1>準備</h1>

<p>まずアプリ作成（てきとう）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails new github_login_sample
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>github_login_sample
</span><span class='line'><span class="nv">$ </span>rails g scaffold Blog title body:text
</span></code></pre></td></tr></table></div></figure>


<p>Gemfileに下記を追加</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;devise&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;omniauth-github&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s2">&quot;figaro&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>deviseのinstall等</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle
</span><span class='line'><span class="nv">$ </span>rails g devise:install
</span><span class='line'><span class="nv">$ </span>rails g devise User
</span><span class='line'><span class="nv">$ </span>rails g migration AddColumnsToUsers provider uid
</span><span class='line'><span class="nv">$ </span>rake db:migrate
</span><span class='line'><span class="nv">$ </span>rails g figaro:install
</span></code></pre></td></tr></table></div></figure>


<h1>figaro</h1>

<p>figaroをインストールすると <code>config/application.yml</code> が作成され、<code>.gitignore</code> に下記が追加されます</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/config/application.yml
</span></code></pre></td></tr></table></div></figure>


<p><code>application.yml</code> には下記のように<code>APP_ID</code>と<code>APP_SECRET</code>を書きます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>APP_ID: xxxxxxxxxxxxxxxxxxxx
</span><span class='line'>APP_SECRET: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
</span></code></pre></td></tr></table></div></figure>


<p>あ、これはGithubの Settings/Apprications/Register new application でアプリを登録すると発行されます。</p>

<p>そして <code>config/initializers/devise.rb</code> へ</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">omniauth</span> <span class="ss">:github</span><span class="p">,</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;APP_ID&quot;</span><span class="o">]</span><span class="p">,</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;APP_SECRET&quot;</span><span class="o">]</span><span class="p">,</span> <span class="ss">scope</span><span class="p">:</span> <span class="s1">&#39;user,public_repo&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>と書くわけです。<code>application.yml</code> に書いた名称と同じなら、<code>APP_ID</code>とかじゃなくても、何でもいいです。</p>

<p><code>application.yml</code> がgit管理対象外になっているので、githubに上げても<code>APP_ID</code>と<code>APP_SECRET</code>が知られなくていいですね。（privateリポジトリなら関係ないけど）</p>

<h1>routes</h1>

<p>次は<code>config/routes.rb</code> へ下記を追加。callbackのルーティングです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">root</span> <span class="s1">&#39;blogs#index&#39;</span>
</span><span class='line'>  <span class="n">get</span> <span class="s1">&#39;blogs/index&#39;</span>
</span><span class='line'>  <span class="n">devise_for</span> <span class="ss">:users</span><span class="p">,</span> <span class="ss">:controllers</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:omniauth_callbacks</span> <span class="o">=&gt;</span> <span class="s2">&quot;users/omniauth_callbacks&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">devise_scope</span> <span class="ss">:user</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">get</span> <span class="s1">&#39;sign_out&#39;</span><span class="p">,</span> <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="s1">&#39;devise/sessions#destroy&#39;</span><span class="p">,</span> <span class="ss">:as</span> <span class="o">=&gt;</span> <span class="ss">:destroy_user_session</span>
</span><span class='line'>  <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>controller</h1>

<p>それから <code>app/controller/users/</code> に <code>omniauth_callbacks_controller.rb</code> を追加します。
callback時のログイン処理です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Users</span><span class="o">::</span><span class="no">OmniauthCallbacksController</span> <span class="o">&lt;</span> <span class="no">Devise</span><span class="o">::</span><span class="no">OmniauthCallbacksController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">github</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_or_create_by</span><span class="p">(</span><span class="n">user_params</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@user</span><span class="o">.</span><span class="n">persisted?</span>
</span><span class='line'>      <span class="n">sign_in_and_redirect</span> <span class="vi">@user</span><span class="p">,</span> <span class="ss">:event</span> <span class="o">=&gt;</span> <span class="ss">:authentication</span>
</span><span class='line'>      <span class="n">set_flash_message</span><span class="p">(</span><span class="ss">:notice</span><span class="p">,</span> <span class="ss">:success</span><span class="p">,</span> <span class="ss">:kind</span> <span class="o">=&gt;</span> <span class="s2">&quot;Github&quot;</span><span class="p">)</span> <span class="k">if</span> <span class="n">is_navigational_format?</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">session</span><span class="o">[</span><span class="s2">&quot;devise.github_data&quot;</span><span class="o">]</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">env</span><span class="o">[</span><span class="s2">&quot;omniauth.auth&quot;</span><span class="o">]</span>
</span><span class='line'>      <span class="n">redirect_to</span> <span class="n">new_user_registration_url</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">user_params</span>
</span><span class='line'>    <span class="n">request</span><span class="o">.</span><span class="n">env</span><span class="o">[</span><span class="s2">&quot;omniauth.auth&quot;</span><span class="o">].</span><span class="n">slice</span><span class="p">(</span><span class="ss">:provider</span><span class="p">,</span> <span class="ss">:uid</span><span class="p">)</span><span class="o">.</span><span class="n">to_h</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>model</h1>

<p><code>app/models/user.rb</code> に下記を追加。もうちょっとです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'>  <span class="n">devise</span> <span class="ss">:omniauthable</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h1>view</h1>

<p>viewにSign in、Sign outを追加します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">user_signed_in?</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">&quot;Sign out&quot;</span><span class="p">,</span> <span class="n">destroy_user_session_path</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">else</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">    </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">&quot;Sign in with Github&quot;</span><span class="p">,</span> <span class="n">user_omniauth_authorize_path</span><span class="p">(</span><span class="ss">:github</span><span class="p">)</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<h1>そして</h1>

<p>あとはログイン後に表示する箇所を</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="cp">&lt;%</span> <span class="k">if</span> <span class="n">user_signed_in?</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'>
</span><span class='line'><span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>でくくるとか、controllerで認証処理を書けばいいわけです。</p>

<hr />

<h1>参考</h1>

<p>参考にさせていただきました。
<a href="http://qiita.com/soramugi/items/5b2ed46e8c8b6157e7cc">devise gemを使ってtwitter認証の設定</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[すごい広島#68に参加しました]]></title>
    <link href="http://kwgch.github.io/blog/2014/09/03/blog/"/>
    <updated>2014-09-03T23:46:58+09:00</updated>
    <id>http://kwgch.github.io/blog/2014/09/03/blog</id>
    <content type="html"><![CDATA[<h1>参加方式</h1>

<p>今週も<a href="http://great-h.github.io/">すごい広島</a>に参加しました。</p>

<p>といってもエア参加です。</p>

<p>そうです。なんとすごい広島は、会場に行かなくても、エア参加ができるのです。</p>

<p>なぜエア参加をしたのか?</p>

<p>パソコンを忘れたのです。</p>

<p>なので、ネットカフェから参加しました。</p>

<p>ネカフェで開発ができるのです。すごい時代です。</p>

<p>ちなみに<a href="https://www.nitrous.io">nitrous.io</a>を使いました。</p>

<p>ナイトラスと読むらしいです。</p>

<h1>今日やること</h1>

<p><a href="https://github.com/great-h/great-h.github.io/issues/1190">今日はやることにしたのは２つ。</a></p>

<p>１つは、issueにチェックボックスをつける。</p>

<p>他の人のIssueを見ると、チェックボックスがついています。</p>

<p>いいな。何だそれ。どうやるんだ。</p>

<p><a href="https://github.com/blog/1375%0A-task-lists-in-gfm-issues-pulls-comments">ここに書いてありました。</a></p>

<p>こんな感じで書けばいいみたいです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>- [ ] a task list item</span></code></pre></td></tr></table></div></figure>


<p>これはすぐできました。</p>

<p>もう１つは、<a href="https://github.com/intridea/omniauth">omniauth</a>を使ってGitHubでログインする機能を実装する、というのものです。</p>

<p>詳細は<a href="http://kwgch.github.io/blog/2014/09/03/rails/">別エントリ</a>にします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【広島】AWSハンズオンに参加しました]]></title>
    <link href="http://kwgch.github.io/blog/2014/08/29/aws-hands-on/"/>
    <updated>2014-08-29T15:03:39+09:00</updated>
    <id>http://kwgch.github.io/blog/2014/08/29/aws-hands-on</id>
    <content type="html"><![CDATA[<p>午後休をとって、<a href="https://atnd.org/events/55286">【広島】AWSハンズオン</a>というのに参加してきました。</p>

<h1>やったこと</h1>

<h3>VPC（仮想プライベートクラウド）</h3>

<ul>
<li>VPCを作成</li>
<li>Internet Gatewaysを設定</li>
<li>Subnetsでサブネットを設定</li>
<li>RoutTablesで上記VPCをAttatch</li>
<li>Security GroupsのInbound RulesでSSHを許可</li>
</ul>


<h3>EC2（仮想サーバー）</h3>

<ul>
<li>Key Pairsを作成、pemファイル保存</li>
<li>Amazon Linux AMIをt2.microで作成</li>
<li>TeraTermでローカルからSSH接続（上記pemファイルを使用）</li>
<li>apacheのインストールと立ち上げ</li>
<li>ローカルのブラウザからアクセス</li>
</ul>


<h3>RDS（マネージドRDBサービス）</h3>

<ul>
<li>mysqlを立ち上げ</li>
<li>EC2側Security GroupsのInbound Rulesでmysqlを許可</li>
<li>EC2からアクセス</li>
</ul>


<h3>あとかたづけ</h3>

<ul>
<li>各種インスタンスの廃棄</li>
</ul>


<h1>感想</h1>

<p>以前、ドットインストールの<a href="http://dotinstall.com/lessons/basic_aws">Amazon Web Services入門 </a>を一通りやったことがあるのですが、だいぶ忘れていました…</p>

<p>awsはweb上にドキュメントがしこたまあるのですが、やっぱり手を動かさないとピンとこないことが多いです。</p>

<p>参加者との交流ができなかったので、ちょっとさみしかったです。</p>

<p><a href="http://jaws-ug.jp/bc/hiroshima/">JAWS-UG 広島支部</a>では次回のハンズオンや勉強会を予定しているとの事だったので、また参加したいと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[すごい広島#67に参加しました]]></title>
    <link href="http://kwgch.github.io/blog/2014/08/27/blog/"/>
    <updated>2014-08-27T22:41:45+09:00</updated>
    <id>http://kwgch.github.io/blog/2014/08/27/blog</id>
    <content type="html"><![CDATA[<h2>すごい広島について</h2>

<p><a href="http://great-h.github.io/">すごい広島</a>というのは、広島市内でやっているミートアップ的なもので、１年以上やっているようです。</p>

<p>（調べたら2013-05-22が初回でした）</p>

<p><a href="https://github.com/eiel">ひむらさん</a>という人が主催しています。広島のいろいろな勉強会やイベントの主催、もしくは裏で何かやっているようです。</p>

<p>すごい広島という名前は、<a href="http://www.amazon.co.jp/dp/4274068854">すごいH本</a>の影響のようです。なんてHなんだ。</p>

<p>開催しているのは以前から知っていて、そのうち遊びに行こうと思っていたのですが、なかなか参加できず、今回やっと参加しました。</p>

<p>あ、今回は９人くらいの参加だったようです。各自もくもくと作業に取り組んでいました。</p>

<h2>場所</h2>

<p>場所は中区のコワーキングスペース<a href="http://coworking-hiroshima.com/">Movin&#8217;on</a>というところでした。フリードリンクとお菓子とWiFiと電源があって、最近できたところらしくキレイで、落ち着ける場所だと思いました。</p>

<h2>しきたりと習わし</h2>

<p>参加した人はブログを書いて、すごい広島のGitHub Pagesにリンクを追加して、プルリクを送るしきたりがあるようです。</p>

<p>新しくブログを始めた私にとっては渡りに船ということで、ここに書かせていただきます。</p>

<p>Githubの練習にもなるので、行ってよかったと思います。正直言って、日常でプルリクを送る機会がありません。</p>

<p>すごい広島に参加するときは、「今日やること」をGitHubのIssueとして登録するのが、ならわしのようなので、私も登録しました。</p>

<h2>予定と実績</h2>

<p>その内容は<a href="https://github.com/great-h/great-h.github.io/issues/1160">Rspecでコントローラのテストコードを書く</a>というものです。</p>

<p>なぜなら私は、<a href="http://www.sonicgarden.jp/">株式会社ソニックガーデン</a>さんの運営する<a href="https://learning.sonicgarden.jp/">sgLearning</a>を利用して、<a href="http://rubyonrails.org/">Ruby on Rails</a>を絶賛勉強中で、ちょうど<a href="https://learning.sonicgarden.jp/lc/practices/510_rails10">コントローラのテストコードを書けるようになる</a>という課題をやるところだったからです。</p>

<p>2、３ヶ月前に<a href="http://railstutorial.jp/">Ruby on Rails チュートリアル</a>もひととおりやったし、楽勝だろうと思ったのですが、そのときの内容はすっかり忘れており、書き方がさっぱりわかりません。</p>

<p>結局、すごい広島の終了時間ギリギリまでかかってしまいました。緑色にはなりましたが。</p>

<p>成果は<a href="https://github.com/kwgch/blog_practice/commit/7d0dfd2cc65fc8d0ddac12136f355fbcb2ed0ee5">こちら</a>です。汚いです。</p>

<p>分かっていないメソッドとか多すぎるので、<a href="https://leanpub.com/everydayrailsrspec-jp">Everyday Rails</a>なんかをしっかり読んで、はあくしたいと思いました。</p>

<h2>先生現る</h2>

<p>ひむらさんと話していたら、<a href="https://www.relishapp.com/rspec/rspec-core/docs/helper-methods/let-and-let">letは遅延評価、let!は実行前に評価される</a>ことや、<a href="https://relishapp.com/rspec/rspec-rails/docs/transactions">itごとにトランザクションが分かれる</a>ことなどを教えてもらいました。</p>

<p>なんと彼は広島でいちばんRuby on Railsに詳しい人らしく、<a href="https://github.com/rails/rails">ソース</a>まで読んでいるというではありませんか。今度からひむら先生と呼ぼう。そして色々教えてもらおうと思いました。</p>

<h2>感想</h2>

<p>初めて参加したのもあり、正直どんなノリかよくわからなかったのですが、ひたすら作業に没頭してしまいました。
すごい広島は毎週水曜18:00〜でやってるようなので、また遊びに行こうと思いました。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[新しくブログを始めました]]></title>
    <link href="http://kwgch.github.io/blog/2014/08/26/blog/"/>
    <updated>2014-08-26T22:41:45+09:00</updated>
    <id>http://kwgch.github.io/blog/2014/08/26/blog</id>
    <content type="html"><![CDATA[<h2>新しくブログを始めた理由</h2>

<p>新しくブログを始めました。</p>

<p>はじめは、<a href="https://pages.github.com/">GitHub Pages</a>が、Webサイトを公開するには簡単だと聞き、試そうと思ったのですが、</p>

<p>ググってると<a href="http://jekyllrb.com/">Jekyll</a>（ジキルと読む）を使うとブログが簡単に構築できると知りました。</p>

<p>さらにググると<a href="http://octopress.org/">Octopress</a>というものがあり、さらに簡単にブログを構築できると知りました。</p>

<p>テーマというのを入れると見た目を簡単に変えられるようなので、<a href="https://github.com/kAworu/octostrap3">octostrap3</a>というのを入れました。</p>

<p>意外と簡単にできたので、blogを書いてみることにしました。</p>

<p><a href="http://daringfireball.net/projects/markdown/">markdown</a>で書けるので、その練習も兼ねてしばらくこれで書こうと思います。</p>
]]></content>
  </entry>
  
</feed>
